'use client';
import React, { useEffect, useState, useCallback } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useRouter, usePathname } from 'next/navigation';
import { useToast } from '@/app/components/ui/toast/use-toast';
import {
	Product,
	KindeUser,
	DashboardProps,
} from '@/app/dashboard/types/dashboard_types';
import { useMediaQuery } from '@/hooks/use-media-query';
import {
	Tabs,
	TabsContent,
	TabsList,
	TabsTrigger,
} from '@/components/ui/Tabs/Tabs';
import { DashboardHeader } from './components/dashboardHeader';
import { YourAdsTab } from './components/yourAdsTab';
import { PublishedAdsTab } from './components/publishAdTab';
import { ExtendAdModal } from './components/extendAdModel';
import { ExpiringAdsAlert } from './components/expiringAdsAlert';
import { SearchFilter } from './components/searchFilter';
import { Badge } from '@/components/ui/badge';
import {
	Settings,
	Bell,
	LineChart,
	Calendar,
	ChevronDown,
	RefreshCw,
	Clock,
	ArrowUpRight,
	Activity,
	PieChart,
	TrendingUp,
	Eye,
	MousePointer,
	Percent,
	CheckCircle,
	X,
	HelpCircle,
	Info,
	ChevronRight,
} from 'lucide-react';
import { Button } from '@/components/ui/button';

const Dashboard: React.FC<DashboardProps> = ({ isMenuOpen, user }) => {
	const [products, setProducts] = useState<Product[]>([]);
	const [publishedAds, setPublishedAds] = useState<Product[]>([]);
	const [loading, setLoading] = useState<boolean>(true);
	const [error, setError] = useState<string | null>(null);
	const [filter, setFilter] = useState<string>('');
	const [expiringAds, setExpiringAds] = useState<Product[]>([]);
	const [selectedExpiringAd, setSelectedExpiringAd] = useState<Product | null>(
		null
	);
	const [isConfigOpen, setIsConfigOpen] = useState<boolean>(false);
	const [isInitialized, setIsInitialized] = useState(false);
	const [userData, setUserData] = useState<any>(null);
	const [activeTimeframe, setActiveTimeframe] = useState('weekly');
	const [isRefreshing, setIsRefreshing] = useState(false);
	const { toast } = useToast();
	const [notification, setNotification] = useState<string | null>(null);
	const [showHelp, setShowHelp] = useState<boolean>(false);

	// Your existing functions and useEffect hooks here
	// ...

	// Find best performing ad
	const bestPerformingAd =
		products.length > 0
			? products.reduce(
					(max, p) =>
						(p.performance?.clicks || 0) > (max.performance?.clicks || 0)
							? p
							: max,
					products[0]
				)
			: null;

	return (
		<div className={`min-h-screen bg-gray-100 dark:bg-gray-900 transition-all duration-300 ${isMenuOpen ? 'ml-[16rem]' : 'ml-[5.2rem]'}`}>
			<div className="p-6">
				<div className="flex flex-col h-full bg-gradient-to-br from-gray-900 to-black min-h-[calc(100vh-60px)]">
					<DashboardHeader
						userData={userData}
						onOpenSettings={() => setIsConfigOpen(!isConfigOpen)}
					/>
					
					{/* Main content area */}
					<div className="flex-1 p-6">
						{/* Your existing dashboard content */}
					</div>
				</div>
			</div>
		</div>
	);
};

export default Dashboard; 